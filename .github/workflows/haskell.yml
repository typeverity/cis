name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: buildjet-8vcpu-ubuntu-2204-arm
    container:
    steps:
      - uses: actions/checkout@v4

      - uses: buildjet/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true # otherwise we would use the latest locally cached lts version, which might be older than upstream
          cache: npm
          cache-dependency-path: infra/package-lock.json

      - name: Initialize cabal
        run: >
          docker run --rm -v ~/.cabal/store:/root/.cabal/store -v $PWD:/app -w /app glcr.b-data.ch/ghc/ghc-musl:9.6.3
          cabal update

      - name: Configure the build
        run: >
          docker run --rm -v ~/.cabal/store:/root/.cabal/store -v $PWD:/app -w /app glcr.b-data.ch/ghc/ghc-musl:9.6.3
          sh -c 'cabal update && cabal configure --enable-tests --enable-benchmarks --disable-documentation && cabal build --dry-run'
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: buildjet/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-${{ runner.arch }}-ghc-9.6.3
        with:
          path: ~/.cabal/store
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: >
          docker run --rm -v ~/.cabal/store:/root/.cabal/store -v $PWD:/app -w /app glcr.b-data.ch/ghc/ghc-musl:9.6.3
          sh -c 'cabal update && cabal build all --only-dependencies'

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: buildjet/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ~/.cabal/store
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - run: |
          docker run --rm -v ~/.cabal/store:/root/.cabal/store -v $PWD:/app -w /app glcr.b-data.ch/ghc/ghc-musl:9.6.3 \
            sh -c 'cabal update && cabal install cisserver --installdir=out --enable-executable-static --overwrite-policy=always'
          rm -f out/cisclient
          mv out/cisserver out/bootstrap
          file -L out/bootstrap
          ldd out/bootstrap

      - run: npm ci
        working-directory: infra

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::029230740929:role/GitHubDeploymentRole

      - run: npm run cdk deploy -- --require-approval=never
        working-directory: infra
