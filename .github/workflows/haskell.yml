name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: ghc-${{ matrix.ghc-version }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest-l
          - macos-latest
          - macos-latest-xlarge
        ghc-version:
          - "9.6.3"

    steps:
      - uses: actions/checkout@v3

      - name: set up ghcup
        id: setup-ghcup
        run: >
          curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org |
            BOOTSTRAP_HASKELL_NONINTERACTIVE=1
            BOOTSTRAP_HASKELL_MINIMAL=1
            sh

      - name: Get ghcup location
        id: ghcup
        run: |
          echo "basedir=$(ghcup whereis basedir)" >> "$GITHUB_OUTPUT"

      - name: Cache ghcup
        uses: actions/cache@v3
        with:
          path: ${{ steps.ghcup.outputs.basedir }}
          key: ${{ runner.os }}-${{ runner.arch }}-ghcup

      - name: install ghc and cabal
        run: |
          ghcup install ghc --set ${{ matrix.ghc-version }}
          ghcup install cabal

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-${{ runner.arch }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Run tests
        run: cabal test all

      - name: Check cabal file
        run: cabal check || true

      - name: Build documentation
        run: cabal haddock all

  deploy:
    needs:
      - build
    runs-on: macos-latest-large
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true # otherwise we would use the latest locally cached lts version, which might be older than upstream
          cache: npm
          cache-dependency-path: infra/package-lock.json
      - run: npm install
        working-directory: infra
      - run: cdk deploy
        working-directory: infra
