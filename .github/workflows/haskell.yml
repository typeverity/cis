name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build-base:
    runs-on: buildjet-8vcpu-ubuntu-2204-arm
    permissions:
      packages: write
      contents: read
    steps:
      - run: |
          echo "uid=$(id -u)" >> "$GITHUB_OUTPUT"
        id: uid
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          file: ghc.Dockerfile
          push: true
          tags: ghcr.io/typeverity/ghc-base:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            uid=${{ steps.uid.outputs.uid }}

  deploy:
    runs-on: buildjet-8vcpu-ubuntu-2204-arm
    needs:
      - build-base
    permissions:
      packages: read
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize cabal
        run: >
          mkdir -p ~/.cabal &&
          docker run --user glenda --rm -v ~/.cabal:/home/glenda/.cabal -v $PWD:/app -w /app ghcr.io/typeverity/ghc-base:latest
          cabal update

      - name: Configure the build
        run: >
          docker run --user glenda --rm -v ~/.cabal:/home/glenda/.cabal -v $PWD:/app -w /app ghcr.io/typeverity/ghc-base:latest
          sh -c 'cabal configure --enable-tests --enable-benchmarks --disable-documentation && cabal build --dry-run'
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: buildjet/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-${{ runner.arch }}-ghc-9.6.3
        with:
          path: ~/.cabal
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: >
          docker run --user glenda --rm -v ~/.cabal:/home/glenda/.cabal -v $PWD:/app -w /app ghcr.io/typeverity/ghc-base:latest
          sh -c 'cabal build all --only-dependencies'

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: buildjet/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ~/.cabal
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - run: |
          docker run --user glenda --rm -v ~/.cabal:/home/glenda/.cabal -v $PWD:/app -w /app ghcr.io/typeverity/ghc-base:latest \
            sh -c 'cabal install cisserver --installdir=out --enable-executable-static --overwrite-policy=always'
          rm -f out/cisclient
          mv out/cisserver out/bootstrap

      - run: npm ci
        working-directory: infra

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::029230740929:role/GitHubDeploymentRole

      - run: npm run cdk deploy -- --require-approval=never
        working-directory: infra
